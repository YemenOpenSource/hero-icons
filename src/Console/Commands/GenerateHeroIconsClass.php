<?php

namespace YOS\HeroIcons\Console\Commands;

use Illuminate\Console\Command;

class GenerateHeroIconsClass extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'generate:hero-icons';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Generate hero icons as constance on a PHP class';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        // <?php

        // Namespace where the output is located
        $namespace = config('heroicons.namespace');

        // The name of output class
        $class = config('heroicons.class');

        // Directory path where the SVG files are located
        $directory = config('heroicons.blade-ui-kit-path');

        $this->line('Scanning: ' . $directory);

        // Get the file names from the directory
        $files = scandir($directory);

        // Initialize an array to store the constant names
        $constants = array();

        // Iterate over the files
        foreach ($files as $file) {
            // Exclude directories and non-SVG files
            if (!is_dir($file) && pathinfo($file, PATHINFO_EXTENSION) === 'svg') {
                // Remove the file extension and convert to capitalized constant name
                $constantName = strtoupper(pathinfo($file, PATHINFO_FILENAME));
                $constantName = str_replace('-', '_', $constantName);

                // Add the constant name to the array
                $constants[] = [
                    'key' => $constantName,
                    'value' => pathinfo($file, PATHINFO_FILENAME),
                    'file' => $file,
                ];
            }
        }

        // Generate the PHP class code
        $classCode = "<?php\n\n";
        $classCode .= "namespace App\\".$namespace.";\n\n";
        $classCode .= "/**\n";
        $classCode .= " * This class is auto generated by 'php artisan generate:hero-icons'\n";
        $classCode .= " * based on [blade ui kit heroicons]. don't modify it.\n";
        $classCode .= " * See https://heroicons.com/ for more.\n";
        $classCode .= " */\n";
        $classCode .= "class $class\n";
        $classCode .= "{\n";
        foreach ($constants as $constant) {
            $key = $constant['key'];
            $value = $constant['value'];
            $file = $constant['file'];
            $classCode .= "    /**\n";
            $classCode .= "     * @var string $file\n";
            $classCode .= "     */\n";
            $classCode .= "    const $key = 'heroicon-$value';\n\n";
            // $classCode .= "    const $key = 'heroicon-$value'; // $file \n";
        }
        $classCode .= "}\n";

        // Output folder path
        $outputFolder = 'app/'.$namespace.'/';

        // Create the output folder if it doesn't exist
        if (!is_dir($outputFolder)) {
            mkdir($outputFolder, 0777, true);
        }

        // Save the PHP class code to a file
        $outputFile = $outputFolder . $class . '.php';

        file_put_contents($outputFile, $classCode);

        $this->info("PHP class generated and saved to $outputFile");
    }
}
